import pyodbc

#CONEXION SQL WITH ODBC

conn = pyodbc.connect('DSN=NAME;UID=NAME;PWD=PASSWORD')
cursor = conn.cursor()

#QUERY LAURA.V 

query = """\
SELECT DISTINCT
N.F_NCV_NAN_KEY                                 AS NANKEY
,MAX(DECODE(N.NC_CHARID,47667,AC_CHARVALUETAG)) AS MODULE
,MAX(DECODE(N.NC_CHARID,2132,AC_CHARVALUETAG))  AS BRAND_OWNER
,MAX(DECODE(N.NC_CHARID,23931,AC_CHARVALUETAG)) AS HOLG
,MAX(DECODE(N.NC_CHARID,23969,AC_CHARVALUETAG)) AS MARCA
,MAX(DECODE(N.NC_CHARID,24120,AC_CHARVALUETAG)) AS SUBMARCA
,MAX(DECODE(N.NC_CHARID,24100,AC_CHARVALUETAG)) AS SEGMENTO
,MAX(DECODE(N.NC_CHARID,24101,AC_CHARVALUETAG)) AS SEGMENTO_1
,MAX(DECODE(N.NC_CHARID,24196,AC_CHARVALUETAG)) AS VARIEDAD
,MAX(DECODE(N.NC_CHARID,24197,AC_CHARVALUETAG)) AS VARIEDAD_1
--,MAX(DECODE(N.NC_CHARID,24059,AC_CHARVALUETAG)) AS TIP_MARCA
,MAX(DECODE(N.NC_CHARID,24158,AC_CHARVALUETAG)) AS TIPO
,MAX(DECODE(N.NC_CHARID,24159,AC_CHARVALUETAG)) AS TIPO_1
,MAX(DECODE(N.NC_CHARID,23867,AC_CHARVALUETAG)) AS ENV_TIPO_ENVASE
,MAX(DECODE(N.NC_CHARID,23868,AC_CHARVALUETAG)) AS ENV1_JERARQUICA
,MAX(DECODE(N.NC_CHARID,24035,AC_CHARVALUETAG)) AS PESO
,MAX(DECODE(N.NC_CHARID,24010,AC_CHARVALUETAG)) AS NUM_UND
,MAX(DECODE(N.NC_CHARID,23726,AC_CHARVALUETAG)) AS LOCAL_PC
,MAX(DECODE(N.NC_CHARID,23720,AC_CHARVALUETAG)) AS PC_ITEM

FROM    VLDIMDB_ES.NANCHARVALS  N,
        VLDIMDB_ES.CHARS        M,
        VLDIMDB_ES.CHARVALS     L
        --,VLDRAWDATA_eS.RAWDATA   R
WHERE       N.NC_CHARID         IN  (47667,2132,24158,24101, 26577,23726,24159, 23931, 24010,23969, 24059, 24120, 24100, 24196, 24197, 23867, 23868, 24035, 24035, 36618, 36619, 6023137,23720)
AND         M.NC_CHARID         =   N.NC_CHARID
AND         L.NC_CHARID         =   N.NC_CHARID
AND         L.NC_CHARVALUEID    =   N.NC_CHARVALUEID
AND         N.F_NCV_NAN_KEY     IN  ('65021565')
GROUP BY    N.F_NCV_NAN_KEY, N.F_NCV_LAST_CHANGED_DATE"""



#EJECUTAMOS SQL QUERY
cursor.execute(query)

#EXTRAEMOS Y OBTENEMOS RESULTADO LINEA A LINEA
rows = cursor.fetchall()
for row in rows:
    print(row)

#NANKEY EJEMPLO 65021565


